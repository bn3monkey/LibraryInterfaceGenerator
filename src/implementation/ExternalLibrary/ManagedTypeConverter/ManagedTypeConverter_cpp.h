#if !defined(__BN3MONKEY_LIBRARY_INTERFACE_GENERATOR_MANAGEDTYPECONVERTER_CPP__)
#define __BN3MONKEY_LIBRARY_INTERFACE_GENERATOR_MANAGEDTYPECONVERTER_CPP__
static constexpr char* MANAGEDTYPECONVERTER_CPP = 
"#include \"ManagedTypeConverter.hpp\"\n"
"#ifdef __BN3MONKEY_MEMORY_POOL__\n"
"using namespace Bn3Monkey;\n"
"std::vector<std::function<void()>> releasers;\n"
"\n"
"static bool is_initialized;\n"
"bool Bn3Monkey::ManagedTypeConverter::initialize()\n"
"{\n"
"#ifdef __BN3MONKEY_MEMORY_POOL__\n"
"\tBn3Monkey::Bn3MemoryPool::initialize({ 128, 128, 128, 128, 4, 4, 4, 4, 4 });\n"
"\t// releasers = Bn3Monkey::Bn3MemoryPool::construct<Bn3Monkey::Bn3Container::vector<std::function<void()>> {}\n"
"\treleasers.reserve(128);\n"
"#else\n"
"\n"
"#endif\n"
"\tis_initialized = true;\n"
"\treturn is_initialized;\n"
"}\n"
"void Bn3Monkey::ManagedTypeConverter::release()\n"
"{\n"
"#ifdef __BN3MONKEY_MEMORY_POOL__\n"
"\tBn3Monkey::Bn3MemoryPool::release();\n"
"\tfor (auto& releaser : releasers)\n"
"\t\treleaser();\n"
"\treleasers.clear();\n"
"#else\n"
"\n"
"#endif\n"
"\tis_initialized = false;\n"
"}\n"
"void Bn3Monkey::ManagedTypeConverter::addReleaser(std::function<void()> releaser)\n"
"{\n"
"#ifdef __BN3MONKEY_MEMORY_POOL__\n"
"\treleasers.push_back(releaser);\n"
"#else\n"
"\n"
"#endif\n"
"\n"
"}\n"
"bool Bn3Monkey::ManagedTypeConverter::isInitialized()\n"
"{\n"
"\treturn is_initialized;\n"
"}\n"
"\n"
"\n"
"#endif\n";
#endif //__BN3MONKEY_LIBRARY_INTERFACE_GENERATOR_MANAGEDTYPECONVERTER_CPP__
